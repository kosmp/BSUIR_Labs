 org $8000
 
 ldab #10 ; количество итераций для инициализации
 ldx #$8200 ; стартовый адрес
  
Initialization
 stab 0,x 
 inx 
 decb ; уменьшение И для выхода из цикла, когда Z станет = 0
 bne Initialization

 ldx #$8200 ; восстановление стартового адреса
 ldaa #10
 staa $8400
 ldab #9 ; на 1 меньше, т.к. кол-во сравнений на 1 меньше, чем кол-во ячеек
 stab $8800

 ; в 8800 будут храниться счётчики внутреннего цикла. Каждый раз начальное значение внутр счётчика на 1 меньше предыдущего

SortLoopExternal
 ldx #$8200
 ldaa $8800 ; нужно в ячейку 8600 записывать значение из 8800
 staa $8600 ; нужно в ячейку 8600 записывать значение из 8800
 ldaa $8400 ; Счётчик внешнего цикла. Значение из ячейки 8400 должно уменьшаться, пока не станет равным 0, т.е. Z=1
 ldab $8600 ; Счётчик внутреннего цикла
 deca
 staa $8400
 bne SortLoopIn ; В каждой итерации отрабатывает внутренний цикл
 beq Done ; Если значение ячейки 8400(в данном цикле хранится в a) равно 0, т.е. Z=1, значит внешний цикл отработал и сортировка завершена

SortLoopIn
 stab $8600 ; т.к. b используем в разных целях
 ldaa 1,x
 ldab 0,x
 cba ; если a меньше b, то N=1
 bmi Swap ; если a меньше b
 bpl NotSwap ; если a больше либо равно b

Swap
 staa 0,x
 stab 1,x

NotSwap
 inx
 ldab $8600
 decb
 stab $8600
 bne SortLoopIn ; Если Z=0 цикл продолжится
 ldab $8800
 decb
 stab $8800
 ldab $8600 ; возврат, чтобы не затирать флаг Z, если он появится
 beq SortLoopExternal ; Выход из цикла, когда количество оставшихся ячеек станет равным 0, т.е. Z=1

Done
 ldaa #$bd
 ldab #$13
 wai